
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Doctor/Views/Shared/_DoctorLayout.cshtml";
}

<div class="col-sm-12 col-xl-6">
    <div class="bg-light rounded h-100 p-4">
        <h3 class="mb-4" align="center">Manage Doctor</h3>
        <div class="mb-3">
            <label>Name</label>
            <span style="color:red">*</span>
            <input type="text" id="txtname" class="form-control" autocomplete="off" />
            <span id="name" style="color:red; display:none;">This Field is Required.</span>
        </div>
        <div class="mb-3">
            <label>Address</label>
            <span style="color:red">*</span>
            <textarea type="text" id="txtaddress" class="form-control" autocomplete="off"></textarea>
            <span id="address" style="color:red; display:none;">This Field is Required.</span>
        </div>
        <div class="mb-3">
            <label>Email:</label>
            <span style="color:red">*</span>
            <input type="email" id="txtemail" class="form-control" autocomplete="off" />
            <span id="email" style="color:red; display:none;">This Field is Required.</span>
        </div>
        <div class="mb-3">
            <label>Phone Number</label>
            <span style="color:red">*</span>
             <input type="text" id="txtpno" class="form-control" autocomplete="off" /> 
            @* <input type="tel" id="txtpno" class="form-control" autocomplete="off" placeholder="Enter your phone number"
                   pattern="^\d{10}$" title="Please enter a valid 10-digit phone number" /> *@
            <span id="phoneno" style="color:red; display:none;">This Field is Required.</span>
        </div>

        

        <div class="mb-3">
            <label>Date:</label>
            <span style="color:red">*</span>
            <input type="date" id="txtdate" class="form-control" autocomplete="off" />
            <span id="date" style="color:red; display:none;">This Field is Required.</span>
        </div>
        <div class="mb-3">
            <label>Time:</label>
            <span style="color:red">*</span>
            <input type="time" id="txttime" class="form-control" autocomplete="off" />
            <span id="time" style="color:red; display:none;">This Field is Required.</span>
        </div>
        <div class="mb-3">
            <label>Available:</label>
            <input type="checkbox" id="chkavailability" class="form-check-input" />
            <label for="chkavailability" class="form-check-label">Is Available</label>
        </div>
        <button type="button" id="btnSave" class="btn btn-primary">Save</button>

        <div class="card-body">
            <div class="row">
                <div class="col-md-12 btn-heading-title">
                    <div class="rowCount" id="rowCount1"></div>
                </div>

                <div id="gridContainer"></div>
            </div>
        </div>
    </div>
</div>
<script>
    var baseUrl = 'https://localhost:7186/api/ManageDoctorAPI/';
    var doctorId = 0;
    $(() => {
        loadDataTable();
    });

    $('#btnSave').click(() => {
        var name = $("#txtname").val() ? $("#txtname").val() : '';
        var address = $("#txtaddress").val() ? $("#txtaddress").val() : '';
        var email = $("#txtemail").val() ? $("#txtemail").val() : '';
        var phoneno = $("#txtpno").val() ? $("#txtpno").val() : '';
        var date = $("#txtdate").val() ? $("#txtdate").val() : '';
        var time = $("#txttime").val() ? $("#txttime").val() : '';
        var isAvailable = $("#chkavailability").is(":checked");
        var isValid = true;

        if (!name) {
            $("#name").show();
            isValid = false;
        }
        else {
            $("#name").hide();
        }
        if (!address) {
            $("#address").show();
            isValid = false;
        }
        else {
            $("#address").hide();
        }
        if (!email) {
            $("#email").show();
            isValid = false;
        }
        else {
            $("#email").hide();
        }
        
        if (!phoneno) {
            $("#phoneno").show();
            isValid = false;
        }
        else {
            $("#phoneno").hide();
        }
        if (!date) {
            $("#date").show();
            isValid = false;
        }
        else {
            $("#date").hide();
        }
        if (!time) {
            $("#time").show();
            isValid = false;
        }
        else {
            $("#time").hide();
        }
        if (!isValid)
            return false;

        var obj = {};
        if (doctorId == 0) {
            obj = { Name: name, Address: address, Email: email, ContactNo: phoneno, Date: date, Time: time, IsAvailable: isAvailable, createdBy: "Vinuthna", updatedBy: "" }
            url = baseUrl + 'Create'
        }
        else {
            obj = { id: doctorId, Name: name, Address: address, Email: email, ContactNo: phoneno, Date: date, Time: time, IsAvailable: isAvailable, createdBy: "Vinuthna", updatedBy: "" }
            url = baseUrl + 'Update'
        }
        console.log(obj);
        $.ajax({
            url: url,
            type: doctorId == 0 ? "POST" : "PUT",
            data: JSON.stringify(obj),
            dataType: "json",
            contentType: 'application/json',
            success: function (data) {
                alert(data.message);
                $("#txtname").val('');
                $("#txtaddress").val('');
                $("#txtemail").val('');
                $("#txtpno").val('');
                $("#txtdate").val('');
                $("#txttime").val('');
                $("#chkavailability").prop('checked', false);
                loadDataTable();
            },
            error: function (xhr) {
            }
        });
    });

    function loadDataTable() {
        var DUrl = baseUrl + 'Get';
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: DUrl,
            success: function (data) {
                $("#gridContainer").dxDataGrid({
                    dataSource: data,
                    columns: [
                        {
                            dataField: 'edit', caption: 'Edit', alignment: 'center', dataType: 'string', format: '', type: 'buttons',
                            cellTemplate: function (container, options) {
                                jQuery('<span class="bx bx-wallet" style:"cursor:pointer">').text('').on('dxclick',
                                    function () {
                                        edit(options.data);
                                    }).appendTo(container);
                            }
                        },
                        {
                            dataField: 'remove', caption: 'De-Active', alignment: 'center', dataType: 'string', format: '', type: 'buttons',
                            cellTemplate: function (container, options) {
                                jQuery('<span class="bx bx-message-square-edit" style:"cursor:pointer">').text('').on('dxclick',
                                    function () {
                                        deleteRec(options.data);
                                    }).appendTo(container);
                            }
                        },
                        { dataField: 'name', caption: 'Name', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'address', caption: 'Address', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'email', caption: 'Email', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'contactNo', caption: 'Mobile No.', alignment: 'center', dataType: 'string', format: '' },
                        // { dataField: 'date', caption: 'Date', alignment: 'center', dataType: 'string', format: '' },
                        {
                            dataField: 'date',
                            caption: 'Date',
                            alignment: 'center',
                            dataType: 'string',
                            cellTemplate: function (container, options) {
                                var date = new Date(options.value);
                                var year = date.getFullYear();
                                var month = ('0' + (date.getMonth() + 1)).slice(-2);
                                var day = ('0' + date.getDate()).slice(-2);
                                var formattedDate = `${month}/${day}/${year}`;
                                container.text(formattedDate);
                            }
                        },
                        { dataField: 'time', caption: 'Time', alignment: 'center', dataType: 'string', format: '' },
                        { dataField: 'isAvailable', caption: 'Avaliable', alignment: 'center', dataType: 'string', format: '' },
                    ],
                    columnsAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    showBorders: true,
                    grouping: { autoExpandAll: true },
                    paging: { pageSize: 10 },
                    pager: { showPageSizeSelector: true, allowedPageSizes: [10, 25, 50, 100] },
                    headerFilter: { visible: true },
                    filterRow: { visible: true, applyFilter: "auto" },
                    allowColumnResizing: true,
                    groupPanel: { visible: true },
                    searchPanel: { visible: true, width: 240, placeholder: "Search..." },
                    allowColumnReordering: true,
                    columnFixing: { enabled: false },
                    columnChooser: {
                        enabled: true,
                        mode: "select",
                        allowSearch: true
                    },
                    onExporting: function (e) {
                        e.component.beginUpdate();
                        e.component.columnOption("Button", "visible", false);
                        e.component.columnOption("Add", "visible", false);
                    },
                    onExported: function (e) {
                        e.component.columnOption("Button", "visible", true);
                        e.component.columnOption("Add", "visible", true);
                        e.component.endUpdate();
                    },
                    onCellPrepared: function (e) {
                        if (e.rowType === "header") {
                            e.cellElement.css("text-align", "center");
                            e.cellElement.css("font-weight", "bold");
                        }
                        if (e.rowType === "group") {
                            e.cellElement.css("text-align", "center");
                        }
                    },
                    onContentReady(e) {
                        jQuery('#rowCount1').html('Total Records : ' + jQuery("#gridContainer").dxDataGrid('instance').totalCount());
                    }
                }).dxDataGrid('instance');
            }

        });
    }

    function edit(data) {
        doctorId = data.id;
        $.ajax({
            url: baseUrl + 'GetById/' + doctorId,
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                var data = response.data;
                $('#txtname').val(data.name);
                $('#txtaddress').val(data.address);
                $('#txtemail').val(data.email);
                $('#txtpno').val(data.contactNo);
                var date = new Date(data.date);
                var year = date.getFullYear();
                var month = ('0' + (date.getMonth() + 1)).slice(-2); // Months are 0-based
                var day = ('0' + date.getDate()).slice(-2); // Days are 1-based

                var formattedDate = `${year}-${month}-${day}`;

                // Set the formatted date value to the input field
                $('#txtdate').val(formattedDate);

                // Check time
                console.log('Raw time:', data.time);
                $('#txttime').val(data.time);
                if (data.isAvailable == true) {
                    $("#chkavailability").prop('checked', true);
                }
            },
            error: function () { }
        });
    }

    function deleteRec(data) {
        if (confirm("Are you sure to remove this record?")) {
            doctorId = data.id;
            url = baseUrl + 'Delete/' + doctorId
            $.ajax({
                url: url,
                type: "DELETE",
                dataType: "json",
                contentType: 'application/json',
                success: function (data) {
                    alert(data.message);
                    loadDataTable();
                },
                error: function (xhr) {
                }
            });
        }
    }
</script>
